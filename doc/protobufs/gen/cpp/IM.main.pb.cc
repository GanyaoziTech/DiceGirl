// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.main.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "IM.main.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tech {
namespace ganyaozi {
namespace dicegirl {
namespace proto {
class baseMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<baseMessage> {
} _baseMessage_default_instance_;

namespace protobuf_IM_2emain_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, srcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, dstid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, ack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseMessage, content_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(baseMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_baseMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "IM.main.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _baseMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _baseMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rIM.main.proto\022\034tech.ganyaozi.dicegirl."
      "proto\"\213\001\n\013baseMessage\0223\n\003cmd\030\001 \001(\0162&.tec"
      "h.ganyaozi.dicegirl.proto.Commands\022\013\n\003se"
      "q\030\002 \001(\006\022\r\n\005srcID\030\003 \001(\t\022\r\n\005dstID\030\004 \001(\t\022\013\n"
      "\003ack\030\005 \001(\010\022\017\n\007content\030\006 \001(\014*\255\002\n\010Commands"
      "\022\020\n\014IM_PING_PONG\020\000\022\021\n\rIM_SECURE_KEY\020\001\022\026\n"
      "\022IM_CREATE_ROOM_REQ\020\002\022\026\n\022IM_CREATE_ROOM_"
      "RES\020\003\022\025\n\021IM_ENTER_ROOM_REQ\020\004\022\025\n\021IM_ENTER"
      "_ROOM_RES\020\005\022\024\n\020IM_EXIT_ROOM_REQ\020\006\022\024\n\020IM_"
      "EXIT_ROOM_RES\020\007\022\033\n\027IM_UPDATE_ROOM_INFO_R"
      "EQ\020\010\022\033\n\027IM_UPDATE_ROOM_INFO_RES\020\t\022\033\n\027IM_"
      "MODIFY_ROOM_INFO_REQ\020\n\022\033\n\027IM_MODIFY_ROOM"
      "_INFO_RES\020\013B+\n\034tech.ganyaozi.dicegirl.pr"
      "otoB\013BaseMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 544);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IM.main.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_IM_2emain_2eproto

const ::google::protobuf::EnumDescriptor* Commands_descriptor() {
  protobuf_IM_2emain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2emain_2eproto::file_level_enum_descriptors[0];
}
bool Commands_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int baseMessage::kCmdFieldNumber;
const int baseMessage::kSeqFieldNumber;
const int baseMessage::kSrcIDFieldNumber;
const int baseMessage::kDstIDFieldNumber;
const int baseMessage::kAckFieldNumber;
const int baseMessage::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

baseMessage::baseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2emain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tech.ganyaozi.dicegirl.proto.baseMessage)
}
baseMessage::baseMessage(const baseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srcid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcid().size() > 0) {
    srcid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcid_);
  }
  dstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dstid().size() > 0) {
    dstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstid_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&seq_, &from.seq_,
    reinterpret_cast<char*>(&ack_) -
    reinterpret_cast<char*>(&seq_) + sizeof(ack_));
  // @@protoc_insertion_point(copy_constructor:tech.ganyaozi.dicegirl.proto.baseMessage)
}

void baseMessage::SharedCtor() {
  srcid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, reinterpret_cast<char*>(&ack_) -
    reinterpret_cast<char*>(&seq_) + sizeof(ack_));
  _cached_size_ = 0;
}

baseMessage::~baseMessage() {
  // @@protoc_insertion_point(destructor:tech.ganyaozi.dicegirl.proto.baseMessage)
  SharedDtor();
}

void baseMessage::SharedDtor() {
  srcid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dstid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void baseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* baseMessage::descriptor() {
  protobuf_IM_2emain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2emain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const baseMessage& baseMessage::default_instance() {
  protobuf_IM_2emain_2eproto::InitDefaults();
  return *internal_default_instance();
}

baseMessage* baseMessage::New(::google::protobuf::Arena* arena) const {
  baseMessage* n = new baseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void baseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, reinterpret_cast<char*>(&ack_) -
    reinterpret_cast<char*>(&seq_) + sizeof(ack_));
}

bool baseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::tech::ganyaozi::dicegirl::proto::Commands >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string srcID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcid().data(), this->srcid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tech.ganyaozi.dicegirl.proto.baseMessage.srcID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dstID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dstid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dstid().data(), this->dstid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tech.ganyaozi.dicegirl.proto.baseMessage.dstID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ack = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tech.ganyaozi.dicegirl.proto.baseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tech.ganyaozi.dicegirl.proto.baseMessage)
  return false;
#undef DO_
}

void baseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // fixed64 seq = 2;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->seq(), output);
  }

  // string srcID = 3;
  if (this->srcid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tech.ganyaozi.dicegirl.proto.baseMessage.srcID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->srcid(), output);
  }

  // string dstID = 4;
  if (this->dstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dstid().data(), this->dstid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tech.ganyaozi.dicegirl.proto.baseMessage.dstID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dstid(), output);
  }

  // bool ack = 5;
  if (this->ack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ack(), output);
  }

  // bytes content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:tech.ganyaozi.dicegirl.proto.baseMessage)
}

::google::protobuf::uint8* baseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // fixed64 seq = 2;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->seq(), target);
  }

  // string srcID = 3;
  if (this->srcid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tech.ganyaozi.dicegirl.proto.baseMessage.srcID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->srcid(), target);
  }

  // string dstID = 4;
  if (this->dstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dstid().data(), this->dstid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tech.ganyaozi.dicegirl.proto.baseMessage.dstID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dstid(), target);
  }

  // bool ack = 5;
  if (this->ack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ack(), target);
  }

  // bytes content = 6;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tech.ganyaozi.dicegirl.proto.baseMessage)
  return target;
}

size_t baseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  size_t total_size = 0;

  // string srcID = 3;
  if (this->srcid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcid());
  }

  // string dstID = 4;
  if (this->dstid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dstid());
  }

  // bytes content = 6;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // fixed64 seq = 2;
  if (this->seq() != 0) {
    total_size += 1 + 8;
  }

  // .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // bool ack = 5;
  if (this->ack() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void baseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const baseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const baseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tech.ganyaozi.dicegirl.proto.baseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tech.ganyaozi.dicegirl.proto.baseMessage)
    MergeFrom(*source);
  }
}

void baseMessage::MergeFrom(const baseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.srcid().size() > 0) {

    srcid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcid_);
  }
  if (from.dstid().size() > 0) {

    dstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dstid_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.ack() != 0) {
    set_ack(from.ack());
  }
}

void baseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void baseMessage::CopyFrom(const baseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tech.ganyaozi.dicegirl.proto.baseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool baseMessage::IsInitialized() const {
  return true;
}

void baseMessage::Swap(baseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void baseMessage::InternalSwap(baseMessage* other) {
  srcid_.Swap(&other->srcid_);
  dstid_.Swap(&other->dstid_);
  content_.Swap(&other->content_);
  std::swap(seq_, other->seq_);
  std::swap(cmd_, other->cmd_);
  std::swap(ack_, other->ack_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata baseMessage::GetMetadata() const {
  protobuf_IM_2emain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2emain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// baseMessage

// .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
void baseMessage::clear_cmd() {
  cmd_ = 0;
}
::tech::ganyaozi::dicegirl::proto::Commands baseMessage::cmd() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.cmd)
  return static_cast< ::tech::ganyaozi::dicegirl::proto::Commands >(cmd_);
}
void baseMessage::set_cmd(::tech::ganyaozi::dicegirl::proto::Commands value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.cmd)
}

// fixed64 seq = 2;
void baseMessage::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 baseMessage::seq() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.seq)
  return seq_;
}
void baseMessage::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.seq)
}

// string srcID = 3;
void baseMessage::clear_srcid() {
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& baseMessage::srcid() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  return srcid_.GetNoArena();
}
void baseMessage::set_srcid(const ::std::string& value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
#if LANG_CXX11
void baseMessage::set_srcid(::std::string&& value) {
  
  srcid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
#endif
void baseMessage::set_srcid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
void baseMessage::set_srcid(const char* value, size_t size) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
::std::string* baseMessage::mutable_srcid() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  return srcid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* baseMessage::release_srcid() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  
  return srcid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void baseMessage::set_allocated_srcid(::std::string* srcid) {
  if (srcid != NULL) {
    
  } else {
    
  }
  srcid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcid);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}

// string dstID = 4;
void baseMessage::clear_dstid() {
  dstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& baseMessage::dstid() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  return dstid_.GetNoArena();
}
void baseMessage::set_dstid(const ::std::string& value) {
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
#if LANG_CXX11
void baseMessage::set_dstid(::std::string&& value) {
  
  dstid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
#endif
void baseMessage::set_dstid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
void baseMessage::set_dstid(const char* value, size_t size) {
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
::std::string* baseMessage::mutable_dstid() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  return dstid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* baseMessage::release_dstid() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  
  return dstid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void baseMessage::set_allocated_dstid(::std::string* dstid) {
  if (dstid != NULL) {
    
  } else {
    
  }
  dstid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dstid);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}

// bool ack = 5;
void baseMessage::clear_ack() {
  ack_ = false;
}
bool baseMessage::ack() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.ack)
  return ack_;
}
void baseMessage::set_ack(bool value) {
  
  ack_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.ack)
}

// bytes content = 6;
void baseMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& baseMessage::content() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  return content_.GetNoArena();
}
void baseMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
#if LANG_CXX11
void baseMessage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
#endif
void baseMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
void baseMessage::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
::std::string* baseMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* baseMessage::release_content() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void baseMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace dicegirl
}  // namespace ganyaozi
}  // namespace tech

// @@protoc_insertion_point(global_scope)
