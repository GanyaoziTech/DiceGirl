// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.main.proto

#ifndef PROTOBUF_IM_2emain_2eproto__INCLUDED
#define PROTOBUF_IM_2emain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tech {
namespace ganyaozi {
namespace dicegirl {
namespace proto {
class baseMessage;
class baseMessageDefaultTypeInternal;
extern baseMessageDefaultTypeInternal _baseMessage_default_instance_;
}  // namespace proto
}  // namespace dicegirl
}  // namespace ganyaozi
}  // namespace tech

namespace tech {
namespace ganyaozi {
namespace dicegirl {
namespace proto {

namespace protobuf_IM_2emain_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_IM_2emain_2eproto

enum Commands {
  IM_PING_PONG = 0,
  IM_SECURE_KEY = 1,
  IM_CREATE_ROOM_REQ = 2,
  IM_CREATE_ROOM_RES = 3,
  IM_ENTER_ROOM_REQ = 4,
  IM_ENTER_ROOM_RES = 5,
  IM_EXIT_ROOM_REQ = 6,
  IM_EXIT_ROOM_RES = 7,
  IM_UPDATE_ROOM_INFO_REQ = 8,
  IM_UPDATE_ROOM_INFO_RES = 9,
  IM_MODIFY_ROOM_INFO_REQ = 10,
  IM_MODIFY_ROOM_INFO_RES = 11,
  Commands_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Commands_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Commands_IsValid(int value);
const Commands Commands_MIN = IM_PING_PONG;
const Commands Commands_MAX = IM_MODIFY_ROOM_INFO_RES;
const int Commands_ARRAYSIZE = Commands_MAX + 1;

const ::google::protobuf::EnumDescriptor* Commands_descriptor();
inline const ::std::string& Commands_Name(Commands value) {
  return ::google::protobuf::internal::NameOfEnum(
    Commands_descriptor(), value);
}
inline bool Commands_Parse(
    const ::std::string& name, Commands* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Commands>(
    Commands_descriptor(), name, value);
}
// ===================================================================

class baseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tech.ganyaozi.dicegirl.proto.baseMessage) */ {
 public:
  baseMessage();
  virtual ~baseMessage();

  baseMessage(const baseMessage& from);

  inline baseMessage& operator=(const baseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const baseMessage& default_instance();

  static inline const baseMessage* internal_default_instance() {
    return reinterpret_cast<const baseMessage*>(
               &_baseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(baseMessage* other);

  // implements Message ----------------------------------------------

  inline baseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  baseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const baseMessage& from);
  void MergeFrom(const baseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(baseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string srcID = 3;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 3;
  const ::std::string& srcid() const;
  void set_srcid(const ::std::string& value);
  #if LANG_CXX11
  void set_srcid(::std::string&& value);
  #endif
  void set_srcid(const char* value);
  void set_srcid(const char* value, size_t size);
  ::std::string* mutable_srcid();
  ::std::string* release_srcid();
  void set_allocated_srcid(::std::string* srcid);

  // string dstID = 4;
  void clear_dstid();
  static const int kDstIDFieldNumber = 4;
  const ::std::string& dstid() const;
  void set_dstid(const ::std::string& value);
  #if LANG_CXX11
  void set_dstid(::std::string&& value);
  #endif
  void set_dstid(const char* value);
  void set_dstid(const char* value, size_t size);
  ::std::string* mutable_dstid();
  ::std::string* release_dstid();
  void set_allocated_dstid(::std::string* dstid);

  // bytes content = 6;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // fixed64 seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::tech::ganyaozi::dicegirl::proto::Commands cmd() const;
  void set_cmd(::tech::ganyaozi::dicegirl::proto::Commands value);

  // bool ack = 5;
  void clear_ack();
  static const int kAckFieldNumber = 5;
  bool ack() const;
  void set_ack(bool value);

  // @@protoc_insertion_point(class_scope:tech.ganyaozi.dicegirl.proto.baseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr srcid_;
  ::google::protobuf::internal::ArenaStringPtr dstid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 seq_;
  int cmd_;
  bool ack_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2emain_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// baseMessage

// .tech.ganyaozi.dicegirl.proto.Commands cmd = 1;
inline void baseMessage::clear_cmd() {
  cmd_ = 0;
}
inline ::tech::ganyaozi::dicegirl::proto::Commands baseMessage::cmd() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.cmd)
  return static_cast< ::tech::ganyaozi::dicegirl::proto::Commands >(cmd_);
}
inline void baseMessage::set_cmd(::tech::ganyaozi::dicegirl::proto::Commands value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.cmd)
}

// fixed64 seq = 2;
inline void baseMessage::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 baseMessage::seq() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.seq)
  return seq_;
}
inline void baseMessage::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.seq)
}

// string srcID = 3;
inline void baseMessage::clear_srcid() {
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& baseMessage::srcid() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  return srcid_.GetNoArena();
}
inline void baseMessage::set_srcid(const ::std::string& value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
#if LANG_CXX11
inline void baseMessage::set_srcid(::std::string&& value) {
  
  srcid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
#endif
inline void baseMessage::set_srcid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
inline void baseMessage::set_srcid(const char* value, size_t size) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}
inline ::std::string* baseMessage::mutable_srcid() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  return srcid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* baseMessage::release_srcid() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
  
  return srcid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void baseMessage::set_allocated_srcid(::std::string* srcid) {
  if (srcid != NULL) {
    
  } else {
    
  }
  srcid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcid);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.srcID)
}

// string dstID = 4;
inline void baseMessage::clear_dstid() {
  dstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& baseMessage::dstid() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  return dstid_.GetNoArena();
}
inline void baseMessage::set_dstid(const ::std::string& value) {
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
#if LANG_CXX11
inline void baseMessage::set_dstid(::std::string&& value) {
  
  dstid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
#endif
inline void baseMessage::set_dstid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
inline void baseMessage::set_dstid(const char* value, size_t size) {
  
  dstid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}
inline ::std::string* baseMessage::mutable_dstid() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  return dstid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* baseMessage::release_dstid() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
  
  return dstid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void baseMessage::set_allocated_dstid(::std::string* dstid) {
  if (dstid != NULL) {
    
  } else {
    
  }
  dstid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dstid);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.dstID)
}

// bool ack = 5;
inline void baseMessage::clear_ack() {
  ack_ = false;
}
inline bool baseMessage::ack() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.ack)
  return ack_;
}
inline void baseMessage::set_ack(bool value) {
  
  ack_ = value;
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.ack)
}

// bytes content = 6;
inline void baseMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& baseMessage::content() const {
  // @@protoc_insertion_point(field_get:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  return content_.GetNoArena();
}
inline void baseMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
#if LANG_CXX11
inline void baseMessage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
#endif
inline void baseMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
inline void baseMessage::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}
inline ::std::string* baseMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* baseMessage::release_content() {
  // @@protoc_insertion_point(field_release:tech.ganyaozi.dicegirl.proto.baseMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void baseMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:tech.ganyaozi.dicegirl.proto.baseMessage.content)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace dicegirl
}  // namespace ganyaozi
}  // namespace tech

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tech::ganyaozi::dicegirl::proto::Commands> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tech::ganyaozi::dicegirl::proto::Commands>() {
  return ::tech::ganyaozi::dicegirl::proto::Commands_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2emain_2eproto__INCLUDED
